#!/bin/bash
set -e
source /opt/ros/melodic/setup.bash
source /home/user/projects/shadow_robot/base/devel/setup.bash
arm_folder_root="$(rospack find sr_ur_arm_calibration_loader)"
arm_config_folder="${arm_folder_root}/config"


if ! test -d "$(rospack find sr_ur_calibration)/calibrations"; then
    arm_calibrations_folder="$(rospack find sr_ur_calibration)/calibrations"
  else
    arm_calibrations_folder="$(rospack find sr_ur_arm_calibration_loader)/calibrations"
    if ! test -d $arm_calibrations_folder; then
      mkdir $arm_calibrations_folder
    fi
fi

if ! test -d $arm_config_folder; then
  mkdir $arm_config_folder
fi

get_serial_from_arm() {
  sshpass -p easybot ssh root@$1 cat /root/ur-serial
}
get_serial_from_file() {
  if ! test -f "${arm_config_folder}/arm_${1}_calibration_file"; then
    sudo touch "${arm_config_folder}/arm_${1}_calibration_file"
  fi
  cat "${arm_config_folder}/arm_${1}_calibration_file" | sed -r 's/\..*//g'
}
write_serial_to_file() {
  printf "${arm_calibrations_folder}/${1}.yaml" | sudo tee "${arm_config_folder}/arm_${2}_calibration_file"
}
save_mac_address(){
  mac_address=$(arp | grep $1 | awk '{print $3}')
  printf "${mac_address}" | sudo tee "${arm_config_folder}/${1}_mac"
}
get_mac_address_from_robot(){
  mac_address=$(arp | grep $1 | awk '{print $3}')
  echo "${mac_address}"
}
get_mac_address_from_file(){
  if ! test -f "${arm_config_folder}/${1}_mac"; then
    sudo touch "${arm_config_folder}/${1}_mac"
  fi
  mac_address=$(cat "${arm_config_folder}/${1}_mac")
  if [[ $mac_address == "" ]]; then
    mac_address="does_not_exist"
  fi
  echo "${mac_address}"
}
generate_new_calibration_gui(){
(
  echo "10" ; sleep 1
  echo "# Launching calibration extractor" ; sleep 1
  source /opt/ros/melodic/setup.bash
  source /home/user/projects/shadow_robot/base/devel/setup.bash
  roslaunch ur_calibration calibration_correction.launch robot_ip:=$1 target_filename:="${arm_calibrations_folder}/$2.yaml" | grep -m 1 "Calibration correction done" &
  echo "20" ; sleep 1
  echo "30" ; sleep 1
  echo "# waiting"
  echo "40" ; sleep 1
  echo "50" ; sleep 1
  echo "60" ; sleep 1
  # echo "# Getting calibration extractor PID"
  # ur_calibration_pid=$(ps aux | grep "calibration_correction" | grep -v grep | awk '{print $2}')
  echo "70" ; sleep 1
  # echo "# Killing calibration extractor" ; sleep 1
  # kill $ur_calibration_pid
  echo "80" ; sleep 1
  echo "# Finished" ; sleep 1
  echo "100" ; sleep 1
  echo "# Please re-run the launch file to apply the calibration." 
  ) |
  zenity --progress \
    --title="Calibration extration" \
    --text="Beginning calibration extraction..." \
    --percentage=0
  if [ "$?" = -1 ] ; then
          zenity --error \
            --text="Update canceled."
  fi

}
generate_new_calibration(){
  source /opt/ros/melodic/setup.bash
  source /home/user/projects/shadow_robot/base/devel/setup.bash
  roslaunch ur_calibration calibration_correction.launch robot_ip:=$1 target_filename:="${arm_calibrations_folder}/$2.yaml" | grep -m 1 "Calibration correction done" &
  sleep 10
  ur_calibration_pid=$(ps aux | grep "roslaunch ur_calibration" | grep -v grep | awk '{print $2}')
  kill $ur_calibration_pid
}
has_mac_address_changed(){
  if [[ $(get_mac_address_from_file $1) != $(get_mac_address_from_robot $1) ]]; then
    echo "true"
  else
    echo "false"
  fi
}
check_calibration_file_exists(){
  if [[ $1 == "" ]]; then
    serial="does_not_exist"
  else
    serial=$(echo $1 | sed -r 's;.*/;;g')
  fi
  
  if [[ $(ls $arm_calibrations_folder | grep $serial | wc -l) -eq 0 ]]; then
    echo "true"
  else 
    echo "false"
  fi
}

does_serial_file_exist() {
  if test -f "${arm_config_folder}/arm_${1}_calibration_file"; then
    echo "true"
  else
    echo "false"
  fi
}

check_path_in_serial_file(){
  if [[ $(cat "$arm_config_folder/arm_$1_calibration_file" | sed 's;[^/]*$;;' | sed 's;/$;;') != $arm_calibrations_folder ]]; then
    rm "${arm_config_folder}/arm_$1_calibration_file"
  fi
}

#arm_ips=$(echo -e "192.168.1.1\n192.168.2.1")

if [ -z "$ARM_IPS" ]
then
  echo "No arm variables set, exiting arm calibration loader"
  exit 0
fi
arm_ip_addresses=$(echo -e $ARM_IPS)
i=1
for arm_ip in $arm_ip_addresses; do
  check_path_in_serial_file $i
  if [[ $(has_mac_address_changed $arm_ip) == "true" || $(does_serial_file_exist $i) == "false" ]]; then
    save_mac_address $arm_ip
    arm_serial=$(get_serial_from_arm $arm_ip)
    if [[ $(get_serial_from_file $i) != "${arm_serial}" ]]; then
      write_serial_to_file $arm_serial $i
    fi
  fi
  serial_in_file=$(get_serial_from_file $i)
  echo "serial_in_file: $serial_in_file"
  if [[ $(check_calibration_file_exists $serial_in_file) == "true" ]]; then
    arm_serial=$(get_serial_from_arm $arm_ip)
    if $(zenity --question --text="No arm calibration detected for $arm_ip, do you wish to generate one?"); then 
      generate_new_calibration_gui $arm_ip $arm_serial
    fi
  fi
  i=$((i+1))
done
