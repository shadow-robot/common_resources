<launch>
  <arg name="node_name" default="trajectory_republisher"/> 
  <arg name="remapped_joint_states_topic_name" default="remapped_joint_states"/>
  <arg name="trajectory_cmd_topic_name" default="/rh_trajectory_controller/command"/>
  <!-- joints_to_move An empty array will mean the node will forward all incoming joints without filtering -->
  <arg name="joints_to_move" default="[rh_FFJ1, rh_FFJ2, rh_FFJ3, rh_FFJ4,
                                       rh_MFJ1, rh_MFJ2, rh_MFJ3, rh_MFJ4,
                                       rh_RFJ1, rh_RFJ2, rh_RFJ3, rh_RFJ4,
                                       rh_LFJ1, rh_LFJ2, rh_LFJ3, rh_LFJ4, rh_LFJ5,
                                       rh_THJ1, rh_THJ2, rh_THJ3, rh_THJ4, rh_THJ5,
                                       rh_WRJ1, rh_WRJ2]"/>
  <!-- If a robot_side "right" is specified, any joint in the trajectory cmd that has a prefix lh or la will be 
      republished as rh and ra
       If a robot side "left" is specified, any joint in the trajectory cmd that has a prefix rh or ra will be 
      republished as lh and la
       If robot_side is empty "", then joints will be published without name changes -->
  <arg name="robot_side" default="right"/>

  <node name="$(arg node_name)" pkg="sr_utilities_common" type="republish_trajectory_as_joint_states.py">
    <param name="remapped_joint_states_topic_name" type="string" value="/$(arg remapped_joint_states_topic_name)" />
    <param name="trajectory_cmd_topic_name" type="string" value="$(arg trajectory_cmd_topic_name)" />
    <param name="robot_side" type="string" value="$(arg robot_side)" />
    <rosparam param="joints_to_move" subst_value="True">$(arg joints_to_move)</rosparam>
  </node>
</launch>